#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

&trackball {
    //    automouse-layer = <4>;
    //    scroll-layers = <5>;
    // arrows {
    //     layers = <3>;
    //     bindings =
    //         <&kp RIGHT_ARROW>,
    //         <&kp LEFT_ARROW>,
    //         <&kp UP_ARROW>,
    //         <&kp DOWN_ARROW>;
    //     tick = <10>;
    //     wait-ms = <5>;
    //     tap-ms = <5>;
    // };
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };

        macro: macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(O) &kp K &kp W &kp A &kp D &kp M &kp I &kp N &kp N0 &kp N0 &kp N9 &kp N8>;
            label = "MACRO";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&lt 5 Q           &lt 5 W           &lt 3 E       &lt 2 R  &lt 1 T                                      &lt 1 Y     &lt 2 U  &lt 3 I   &kp O     &lt 5 P
&mt LEFT_SHIFT A  &mt LEFT_SHIFT S  &lt 3 D       &lt 2 F  &lt 1 G    &kp LS(LG(S))      &kp MINUS      &lt 1 H     &lt 2 J  &lt 3 K   &kp L     &mkp MB4
&mt LEFT_SHIFT Z  &mt LEFT_SHIFT X  &lt 3 C       &lt 2 V  &lt 1 B    &lt 6 COLON        &lt 6 SEMI     &lt 1 N     &lt 2 M  &mkp MB1  &mkp MB2  &mkp MB3
&kp LCTRL         &kp LEFT_WIN      &kp LEFT_ALT  &to 3    &kp SPACE  &lt 3 ENTER        &kp BACKSPACE  &kp DELETE                               &mkp MB5
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        FUNCTION {
            bindings = <
&kp F1           &kp F2          &kp F3     &kp F4       &kp F5                                                   &kp F6         &kp F7                &kp F8             &kp F9         &kp F10
&kp EXCLAMATION  &kp QUESTION    &kp DLLR   &kp AT_SIGN  &kp AMPERSAND            &trans                 &kp F13  &kp ASTRK      &kp LEFT_PARENTHESIS  &kp RIGHT_BRACE    &kp PIPE       &kp LEFT_BRACKET
&kp INT_YEN      &kp PERCENT     &kp HASH   &kp PERIOD   &kp SEMICOLON            &trans                 &trans   &kp LESS_THAN  &kp GREATER_THAN      &kp RIGHT_BRACKET  &kp BACKSLASH  &kp F11
&kp LS(INT3)     &kp UNDERSCORE  &kp CARET  &kp COMMA    &kp LS(INTERNATIONAL_1)  &kp DOUBLE_QUOTES      &trans   &trans                                                                 &kp F12
            >;
        };

        NUM {
            bindings = <
&kp ESC            &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp MINUS                                                   &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp SLASH     &kp DOUBLE_QUOTES
&kp TAB            &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp AMPERSAND  &kp LC(LA(KP_NUMBER_0))      &kp UNDERSCORE  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp PERIOD    &kp MINUS
&kp SLASH          &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp COLON      &kp EQUAL                    &trans          &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_0  &kp EQUAL
&kp DOUBLE_QUOTES  &kp KP_NUMBER_0  &kp DOT          &kp MINUS        &kp SPACE      &kp ENTER                    &trans          &trans                                                  &kp COLON
            >;
        };

        ARROW {
            bindings = <
&kp ESCAPE        &kp GRAVE       &macro        &kp LC(R)  &kp LEFT_ALT                          &kp MINUS   &kp INS           &kp HOME        &kp PRINTSCREEN  &kp END
&kp TAB           &kp LG(LC(S))   &kp LC(Z)     &kp LC(Y)  &kp LEFT_SHIFT    &trans      &trans  &kp COMMA   &kp SEMI          &kp PAGE_UP     &kp UP_ARROW     &kp PAGE_DOWN
&kp LS(CAPSLOCK)  &kp LC(X)       &kp LC(C)     &kp LC(V)  &kp LEFT_CONTROL  &trans      &trans  &kp PERIOD  &kp SINGLE_QUOTE  &kp LEFT_ARROW  &kp DOWN_ARROW   &kp RIGHT_ARROW
&kp LEFT_CONTROL  &kp LEFT_SHIFT  &kp LEFT_ALT  &to 0      &trans            &trans      &trans  &trans                                                         &kp LC(A)
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &mkp MB1  &mkp MB3  &mkp MB2  &mkp MB4
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans    &mkp MB1  &mkp MB2  &mkp MB3
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                &mkp MB5
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans        &trans        &trans        &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
